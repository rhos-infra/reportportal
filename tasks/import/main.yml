---
- name: Generate deployment XUnit
  jenkins_job_stages:
    jenkins_domain: "{{ other.jenkins.domain }}"
    jenkins_job_name: "{{ other.jenkins.job.name }}"
    jenkins_job_build_id: "{{ other.jenkins.build.id }}"
    xml_path: "{{ other.deployment.results.path }}"

- name: import tests to Reportportal version 5
  reportportal_api:
    url: "{{ reportportal_url }}"
    token: "{{ reportportal_token }}"
    ssl_verify: "{{ ssl_verify | bool }}"
    ignore_skipped_tests: "{{ ignore_skipped_tests | bool }}"
    project_name: "{{ project }}"
    launch_name: "{{ jenkins_job_name }}"
    launch_tags: "{{ tags }}"
    launch_description: "{{ launch_description }}"
    launch_start_time: "{{ launch_start_time | default(omit) }}"
    launch_end_time: "{{ launch_end_time | default(omit) }}"
    traceback_only: "{{ other.traceback.only }}"
    tests_paths: "{{ archive_import_path }}"
    tests_exclude_paths: "{{ archive_exclude_path }}"
    threads: "{{ threads }}"
  ignore_errors: true
  register: import_results

- debug:
    var: import_results

- fail:
    msg: Import tests to Reportportal failed
  when: import_results.failed

- name: set launch UUID
  set_fact:
    launch_uuid: "{{ import_results.launch_id }}"

- name: verify upload succeeded
  uri:
    url: "{{ reportportal_url }}/api/v1/{{ project }}/launch/{{ launch_uuid }}"
    method: GET
    validate_certs: "{{ ssl_verify | bool }}"
    status_code: 200
    headers:
     Accept: "application/json"
     Authorization: "bearer {{ reportportal_token }}"
  register: launch_result

- name: Dumps the launch IDs to files
  when:
    - ((other.launch|default({})).ids|default({})).dir is defined
    - other.launch.ids.dir
  block:
      - name: Creates a directory for the launch ID files
        file:
          path: "{{ other.launch.ids.dir }}"
          state: directory

      - name: Writes launch ID & UUID to files
        copy:
          content: "{{ item.content }}"
          dest: "{{ item.path }}"
        with_items:
          - { path: "{{ other.launch.ids.dir }}/id", content: "{{ launch_result.json.id }}" }
          - { path: "{{ other.launch.ids.dir }}/uuid", content: "{{ launch_result.json.uuid }}" }
